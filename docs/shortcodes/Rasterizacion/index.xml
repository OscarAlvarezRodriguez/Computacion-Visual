<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Computing</title><link>https://oscaralvarezrodriguez.github.io/Computacion-Visual/docs/shortcodes/Rasterizacion/</link><description>Recent content on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://oscaralvarezrodriguez.github.io/Computacion-Visual/docs/shortcodes/Rasterizacion/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://oscaralvarezrodriguez.github.io/Computacion-Visual/docs/shortcodes/Rasterizacion/Contextualizacion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://oscaralvarezrodriguez.github.io/Computacion-Visual/docs/shortcodes/Rasterizacion/Contextualizacion/</guid><description>TAREA 2 - Implementación de un algoritmo de rasterización # Rasterización de circulos # Contextualizacion #</description></item><item><title/><link>https://oscaralvarezrodriguez.github.io/Computacion-Visual/docs/shortcodes/Rasterizacion/Ejemplo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://oscaralvarezrodriguez.github.io/Computacion-Visual/docs/shortcodes/Rasterizacion/Ejemplo/</guid><description>TAREA 2 - Implementación de un algoritmo de rasterización # Rasterización de circulos # Ejemplo de en donde puede aplicarse algún algoritmo de rasterización de circulos. # Antes de observar los ejemplos lea las primeras dos partes Contextualización e Implementación que permite la compresión más a fondo de por qué seria efectivo aplicar la rasterización de circulos principalmente en videojuegos antiguos de pixel art (hay que tener en cuenta que en cada frame del video juego se debe redibujar y calcular los objetos)</description></item><item><title/><link>https://oscaralvarezrodriguez.github.io/Computacion-Visual/docs/shortcodes/Rasterizacion/Implementaci%C3%B3n/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://oscaralvarezrodriguez.github.io/Computacion-Visual/docs/shortcodes/Rasterizacion/Implementaci%C3%B3n/</guid><description>TAREA 2 - Implementación de un algoritmo de rasterización # Rasterización de circulos # Implementación - Algoritmo de Rasterización de Bresenham # let x, y, r, d, xc, yc; let i = 0; let grids = 20; let scalFact; function setup() { createCanvas(600, 600); background(0); scalFact = width / grids; r = 6 * scalFact; xc = 10 * scalFact; yc = 10 * scalFact; showGrids(); showRefCircle(); bresenham(); } function showGrids() { stroke(200); for (i; i</description></item></channel></rss>